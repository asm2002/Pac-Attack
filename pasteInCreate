//Paste In 'create' 


//variables
var starfield;

var hud;
var hud2;

var gameOverText;
var gameOverText2;

var ship;

var bullets;
var nextFire = 0;
var fireRate = 100;

var monsters;
var numberOfMonsters = 1000;
var monsterSpeed = 50;
var wave = 0;

var tolerance = 200;

var hearts;

var numberOfLives = 5;

function create() {
    
    //make world
    game.world.setBounds(0, 0, 800, 540);
    game.physics.startSystem(Phaser.Physics.P2JS);
    game.physics.p2.defaultRestitution = 0.9;
    
    //set background
    starfield = game.add.tileSprite(0, 0, 800, 600, 'stars');
    starfield.fixedToCamera = true;
    
    //gameover text
    gameOverText = game.add.text(200, 200, ' ', {
        font: '48px Arial', 
        fill: '#fff' });
     gameOverText2 = game.add.text(200, 400, '', {
        font: '32px Arial',
        fill: '#fff'});
    gameOverText.visible = false;
    gameOverText.fixedToCamera = true;
    
    //make ship
    ship = game.add.sprite(400, 300, 'ship');
    ship.scale.set(2);
    ship.smoothed = false;
    ship.animations.add('fly', [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], 10, true);
    ship.play('fly');
    
    
    //ship atributes
    game.physics.enable(ship, Phaser.Physics.ARCADE);
    game.camera.follow(ship);
    ship.body.collideWorldBounds = true;
    
    //make bullets
    bullets = game.add.group();
    bullets.enableBody = true;
    bullets.physicsBodyType = Phaser.Physics.ARCADE;
    
    
    //bullet atributes
    bullets.createMultiple(50, 'bullet');
    bullets.setAll('checkWorldBounds', true);
    bullets.setAll('outOfBoundsKill', true);
    
    //make monsters
    monsters = game.add.group();
    monsters.enableBody = true;
    monsters.physicsBodyType = Phaser.Physics.ARCADE;
    
    createMonsters();
    
    //HUD
    hud = game.add.sprite(0, 550, 'hud');
    hud2 = game.add.sprite(512, 550, 'hud');
    
    //make hearts
    hearts = game.add.group();
    hearts.fixedToCamera = true;
    lifeText = game.add.text(20, 560, 'Lives: ', {
        font: '32px 8-bit',
        fill: '#fff'
    });
    lifeText.fixedToCamera = true;
    createLives();
    
        start();
    
}

function start(){

    points = 0;
    game.time.reset();
    
    numberOfMonsters = 1000;
    
    hearts.callAll('revive');
    
    monsters.removeAll();
    numberOfMonsters = 1000;
    monsterSpeed = 50;
    
    createMonsters();
    ship.revive();
    randomizeObjectLocation(coin);
    randomizeObjectLocation(weaponBox);

    gameOverText.visible = false;
    highScoreText.visible = false;
}


function createLives(){
    for(var i = 0; i < numberOfLives; i++)
        var heart = hearts.create(250 - (30 * i), 560, 'heart');
}

function createMonsters(){
    
    var count = 0;
    var inverseTolerance = tolerance;
    
    while(count < numberOfMonsters){
        inverseTolerance *= -1;
        var randx = game.world.randomX + inverseTolerance;
        var randy = game.world.randomY + inverseTolerance;
        
        if(ship.position.x - tolerance < randx === randx < ship.position.x + tolerance){
            continue;
        }
        count++;
        var monster = monsters.create(randx, randy, 'monster');
    }
    
}
